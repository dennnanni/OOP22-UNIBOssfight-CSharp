using System.Drawing;
using Nanni_Denise;

namespace Prete_Giovanni
{
    enum Inputs
    {
        /// <summary>
        /// Left input
        /// </summary>
        LEFT,
        /// <summary>
        /// Right input
        /// </summary>
        RIGHT,
        /// <summary>
        /// Space input
        /// </summary>
        SPACE,
        /// <summary>
        /// Empty input
        /// </summary>
        EMPTY
    }

    /// <summary>
    /// This interface models the concept of an Entity.
    /// </summary>
    public interface IEntity
    {
        /// <summary>
        /// Property to get and set the renderer.
        /// </summary>
        IRenderer Renderer { get; set; }

        /// <summary>
        /// Property to get and set the transform.
        /// </summary>
        ITransform Transform { get; set; }

        /// <summary>
        /// Property to get and setthe hitbox.
        /// </summary>
        IHitbox Hitbox { get; set; }

        /// <summary>
        /// Property to get and set the health.
        /// </summary>
        IHealth Health { get; set; }

        /// <summary>
        /// This method checks if the entity is displayed in the game window.
        /// </summary>
        /// <param name="position">position position of the player</param>
        /// <returns>true if the entity is close enough to the player in order
        /// to be rendered inside the game window, false otherwise</returns>
        bool IsDisplayed(PointF position);

        /// <summary>
        /// This method is used to render the entity.
        /// </summary>
        /// <param name="position">position of the entity</param>
        /// <returns>the Node generated by the renderer which will be given as input to the Scene</returns>
        IRenderable Render(PointF position);

        /// <summary>
        /// Initialise the components of the entity.
        /// </summary>
        void Init();
    }
}
